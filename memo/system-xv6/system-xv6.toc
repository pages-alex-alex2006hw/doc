\contentsline {section}{\numberline {1}Introduction}{3}{section.1}
\contentsline {subsection}{\numberline {1.1}Problem statement}{3}{subsection.1.1}
\contentsline {subsection}{\numberline {1.2}Solution: OS}{3}{subsection.1.2}
\contentsline {subsection}{\numberline {1.3}What is so special about ``shell''}{4}{subsection.1.3}
\contentsline {subsection}{\numberline {1.4}x86 calling convention}{4}{subsection.1.4}
\contentsline {section}{\numberline {2}The First Process}{6}{section.2}
\contentsline {subsection}{\numberline {2.1}Boot process}{6}{subsection.2.1}
\contentsline {subsection}{\numberline {2.2}Kernel entry (entry.S)}{7}{subsection.2.2}
\contentsline {subsection}{\numberline {2.3}Kernel init (kern/init.c)}{8}{subsection.2.3}
\contentsline {subsection}{\numberline {2.4}Console (kern/console.c)}{8}{subsection.2.4}
\contentsline {subsection}{\numberline {2.5}Monitor (kern/monitor.c)}{8}{subsection.2.5}
\contentsline {subsection}{\numberline {2.6}Printfmt (lib/printfmtc)}{8}{subsection.2.6}
\contentsline {subsection}{\numberline {2.7}proc: Per-process state}{9}{subsection.2.7}
\contentsline {subsection}{\numberline {2.8}Creating the first user process (main.c $\unhbox \voidb@x \hbox {$\rightarrow $}$ proc.c)}{10}{subsection.2.8}
\contentsline {paragraph}{So, what happens when {\bf \texttt {fork}} executed?}{12}{section*.2}
\contentsline {paragraph}{First process vs. oridinary {\bf \texttt {fork}}}{12}{section*.3}
\contentsline {subsection}{\numberline {2.9}Running the first process}{13}{subsection.2.9}
\contentsline {subsection}{\numberline {2.10}Context switch (switch.S)}{14}{subsection.2.10}
\contentsline {subsection}{\numberline {2.11}The first system call: exec}{14}{subsection.2.11}
\contentsline {section}{\numberline {3}Virtual Memory}{15}{section.3}
\contentsline {subsection}{\numberline {3.1}Basics}{15}{subsection.3.1}
\contentsline {subsection}{\numberline {3.2}Setting up kernel virtual memory}{15}{subsection.3.2}
\contentsline {subsection}{\numberline {3.3}Creating an address space by creating/populating page tables}{16}{subsection.3.3}
\contentsline {subsection}{\numberline {3.4}Paging in x86}{17}{subsection.3.4}
\contentsline {subsection}{\numberline {3.5}Physical memory allocation}{17}{subsection.3.5}
\contentsline {subsection}{\numberline {3.6}System call: exec -- Creating user part of address space}{18}{subsection.3.6}
\contentsline {subsection}{\numberline {3.7}allocuvm: Allocating user memory}{19}{subsection.3.7}
\contentsline {subsection}{\numberline {3.8}loaduvm: Loading user memory}{19}{subsection.3.8}
\contentsline {subsection}{\numberline {3.9}System call: exec -- Calling convention}{19}{subsection.3.9}
\contentsline {section}{\numberline {4}Traps, Interrupts, and Device Drivers}{20}{section.4}
\contentsline {subsection}{\numberline {4.1}System calls, exceptions, and interrupts}{20}{subsection.4.1}
\contentsline {subsection}{\numberline {4.2}System call example: exec (initcode.S)}{20}{subsection.4.2}
\contentsline {subsection}{\numberline {4.3}Assembly trap handlers}{20}{subsection.4.3}
\contentsline {subsection}{\numberline {4.4}Setting up interrupt gate descriptor}{20}{subsection.4.4}
\contentsline {subsection}{\numberline {4.5}What happens on system calls, exceptions, and interrupts}{21}{subsection.4.5}
\contentsline {subsection}{\numberline {4.6}IDT: Interrupt descriptor table}{21}{subsection.4.6}
\contentsline {subsection}{\numberline {4.7}trapasm.S}{21}{subsection.4.7}
\contentsline {subsection}{\numberline {4.8}Trapframes}{22}{subsection.4.8}
\contentsline {subsection}{\numberline {4.9}trap: Execution of trap}{23}{subsection.4.9}
\contentsline {subsection}{\numberline {4.10}System calls in Linux}{23}{subsection.4.10}
\contentsline {paragraph}{General points}{23}{section*.4}
\contentsline {paragraph}{What happens on a system call}{23}{section*.5}
\contentsline {subsection}{\numberline {4.11}Classification of interrupts and exceptions}{24}{subsection.4.11}
\contentsline {section}{\numberline {5}File Systems}{26}{section.5}
\contentsline {subsection}{\numberline {5.1}Buffer cache}{26}{subsection.5.1}
\contentsline {paragraph}{Interface}{26}{section*.6}
\contentsline {subsection}{\numberline {5.2}What happens when \texttt {fread} is executed?}{26}{subsection.5.2}
\contentsline {section}{\numberline {6}X86 Assembly Tutorial}{29}{section.6}
\contentsline {subsection}{\numberline {6.1}80386+ Register Set}{29}{subsection.6.1}
\contentsline {subsection}{\numberline {6.2}Segmentation}{29}{subsection.6.2}
\contentsline {subsection}{\numberline {6.3}Common/Useful Instructions}{30}{subsection.6.3}
\contentsline {subsection}{\numberline {6.4}A simple example}{30}{subsection.6.4}
\contentsline {subsection}{\numberline {6.5}Mixing C and Assembly Language}{31}{subsection.6.5}
