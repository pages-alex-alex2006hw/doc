\contentsline {section}{\numberline {1}Inrtoduction}{2}{section.1}
\contentsline {section}{\numberline {2}The First Process}{3}{section.2}
\contentsline {subsection}{\numberline {2.1}Boot process}{3}{subsection.2.1}
\contentsline {subsection}{\numberline {2.2}Kernel entry (entry.S)}{4}{subsection.2.2}
\contentsline {subsection}{\numberline {2.3}Kernel init (kern/init.c)}{5}{subsection.2.3}
\contentsline {subsection}{\numberline {2.4}Console (kern/console.c)}{5}{subsection.2.4}
\contentsline {subsection}{\numberline {2.5}Monitor (kern/monitor.c)}{5}{subsection.2.5}
\contentsline {subsection}{\numberline {2.6}Printfmt (lib/printfmtc)}{5}{subsection.2.6}
\contentsline {subsection}{\numberline {2.7}proc: Per-process state}{6}{subsection.2.7}
\contentsline {subsection}{\numberline {2.8}Creating the first user process (main.c $\unhbox \voidb@x \hbox {$\rightarrow $}$ proc.c)}{7}{subsection.2.8}
\contentsline {paragraph}{So, what happens when {\bf \texttt {fork}} executed?}{9}{section*.2}
\contentsline {paragraph}{First process vs. oridinary {\bf \texttt {fork}}}{9}{section*.3}
\contentsline {subsection}{\numberline {2.9}Running the first process}{10}{subsection.2.9}
\contentsline {subsection}{\numberline {2.10}Context switch (switch.S)}{11}{subsection.2.10}
\contentsline {subsection}{\numberline {2.11}The first system call: exec}{11}{subsection.2.11}
\contentsline {section}{\numberline {3}Virtual Memory}{12}{section.3}
\contentsline {subsection}{\numberline {3.1}Basics}{12}{subsection.3.1}
\contentsline {subsection}{\numberline {3.2}Setting up kernel virtual memory}{12}{subsection.3.2}
\contentsline {subsection}{\numberline {3.3}Creating an address space by creating/populating page tables}{13}{subsection.3.3}
\contentsline {subsection}{\numberline {3.4}Paging in x86}{14}{subsection.3.4}
\contentsline {subsection}{\numberline {3.5}Physical memory allocation}{14}{subsection.3.5}
\contentsline {subsection}{\numberline {3.6}System call: exec -- Creating user part of address space}{15}{subsection.3.6}
\contentsline {subsection}{\numberline {3.7}allocuvm: Allocating user memory}{16}{subsection.3.7}
\contentsline {subsection}{\numberline {3.8}loaduvm: Loading user memory}{16}{subsection.3.8}
\contentsline {subsection}{\numberline {3.9}System call: exec -- Calling convention}{16}{subsection.3.9}
\contentsline {section}{\numberline {4}Traps, Interrupts, and Device Drivers}{17}{section.4}
\contentsline {subsection}{\numberline {4.1}System calls, exceptions, and interrupts}{17}{subsection.4.1}
\contentsline {subsection}{\numberline {4.2}System call example: exec (initcode.S)}{17}{subsection.4.2}
\contentsline {subsection}{\numberline {4.3}Assembly trap handlers}{17}{subsection.4.3}
\contentsline {subsection}{\numberline {4.4}Setting up interrupt gate descriptor}{17}{subsection.4.4}
\contentsline {subsection}{\numberline {4.5}What happens on system calls, exceptions, and interrupts}{18}{subsection.4.5}
\contentsline {subsection}{\numberline {4.6}IDT: Interrupt descriptor table}{18}{subsection.4.6}
\contentsline {subsection}{\numberline {4.7}trapasm.S}{18}{subsection.4.7}
\contentsline {subsection}{\numberline {4.8}Trapframes}{19}{subsection.4.8}
\contentsline {subsection}{\numberline {4.9}trap: Execution of trap}{20}{subsection.4.9}
\contentsline {subsection}{\numberline {4.10}System calls in Linux}{20}{subsection.4.10}
\contentsline {paragraph}{General points}{20}{section*.4}
\contentsline {paragraph}{What happens on a system call}{20}{section*.5}
\contentsline {section}{\numberline {5}File Systems}{22}{section.5}
\contentsline {subsection}{\numberline {5.1}Buffer cache}{22}{subsection.5.1}
\contentsline {paragraph}{Interface}{22}{section*.6}
\contentsline {subsection}{\numberline {5.2}What happens when \texttt {fread} is executed?}{22}{subsection.5.2}
\contentsline {section}{\numberline {6}X86 Assembly Tutorial}{25}{section.6}
\contentsline {subsection}{\numberline {6.1}80386+ Register Set}{25}{subsection.6.1}
\contentsline {subsection}{\numberline {6.2}Segmentation}{25}{subsection.6.2}
\contentsline {subsection}{\numberline {6.3}Common/Useful Instructions}{26}{subsection.6.3}
\contentsline {subsection}{\numberline {6.4}A simple example}{26}{subsection.6.4}
\contentsline {subsection}{\numberline {6.5}Mixing C and Assembly Language}{27}{subsection.6.5}
