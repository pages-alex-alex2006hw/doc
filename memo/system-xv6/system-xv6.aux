\relax 
\ifx\hyper@anchor\@undefined
\global \let \oldcontentsline\contentsline
\gdef \contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global \let \oldnewlabel\newlabel
\gdef \newlabel#1#2{\newlabelxx{#1}#2}
\gdef \newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\let \contentsline\oldcontentsline
\let \newlabel\oldnewlabel}
\else
\global \let \hyper@last\relax 
\fi

\providecommand*\HyPL@Entry[1]{}
\HyPL@Entry{0<</S/D>>}
\@writefile{toc}{\contentsline {section}{\numberline {1}Inrtoduction}{2}{section.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}The First Process}{3}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Boot process}{3}{subsection.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Kernel entry (entry.S)}{4}{subsection.2.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Kernel init (kern/init.c)}{5}{subsection.2.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Console (kern/console.c)}{5}{subsection.2.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}Monitor (kern/monitor.c)}{5}{subsection.2.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.6}Printfmt (lib/printfmtc)}{5}{subsection.2.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.7}proc: Per-process state}{6}{subsection.2.7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.8}Creating the first user process (main.c $\unhbox \voidb@x \hbox {$\rightarrow $}$ proc.c)}{7}{subsection.2.8}}
\@writefile{toc}{\contentsline {paragraph}{So, what happens when {\bf  \texttt  {fork}} executed?}{9}{section*.2}}
\@writefile{toc}{\contentsline {paragraph}{First process vs. oridinary {\bf  \texttt  {fork}}}{9}{section*.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.9}Running the first process}{10}{subsection.2.9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.10}Context switch (switch.S)}{11}{subsection.2.10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.11}The first system call: exec}{11}{subsection.2.11}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Virtual Memory}{12}{section.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Basics}{12}{subsection.3.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Setting up kernel virtual memory}{12}{subsection.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Creating an address space by creating/populating page tables}{13}{subsection.3.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Paging in x86}{14}{subsection.3.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}Physical memory allocation}{14}{subsection.3.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6}System call: exec -- Creating user part of address space}{15}{subsection.3.6}}
\newlabel{sec:sys_exec}{{3.6}{15}{System call: exec -- Creating user part of address space\relax }{subsection.3.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.7}allocuvm: Allocating user memory}{16}{subsection.3.7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.8}loaduvm: Loading user memory}{16}{subsection.3.8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.9}System call: exec -- Calling convention}{16}{subsection.3.9}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Traps, Interrupts, and Device Drivers}{17}{section.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}System calls, exceptions, and interrupts}{17}{subsection.4.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}System call example: exec (initcode.S)}{17}{subsection.4.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Assembly trap handlers}{17}{subsection.4.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Setting up interrupt gate descriptor}{17}{subsection.4.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}What happens on system calls, exceptions, and interrupts}{18}{subsection.4.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6}IDT: Interrupt descriptor table}{18}{subsection.4.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.7}trapasm.S}{18}{subsection.4.7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.8}Trapframes}{19}{subsection.4.8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.9}trap: Execution of trap}{20}{subsection.4.9}}
\@writefile{toc}{\contentsline {section}{\numberline {5}File Systems}{21}{section.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Buffer cache}{21}{subsection.5.1}}
\@writefile{toc}{\contentsline {paragraph}{Interface}{21}{section*.4}}
\@writefile{toc}{\contentsline {section}{\numberline {6}X86 Assembly Tutorial}{22}{section.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}80386+ Register Set}{22}{subsection.6.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}Segmentation}{22}{subsection.6.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3}Common/Useful Instructions}{23}{subsection.6.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.4}A simple example}{23}{subsection.6.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.5}Mixing C and Assembly Language}{24}{subsection.6.5}}
